// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel CSMain

int mapWidth;
int mapHeight;
float logBase = 2;
float heightFactor = 0.05;
float strength = 1;
float minAmount = 0;
float maxFlowStrength = 10;
float curveFactor = 1;
float heightInfluence = 1;
float waterLevel = 0.6;
RWStructuredBuffer<float> heightMap;
RWStructuredBuffer<float> flowMap;
RWStructuredBuffer<float> inciseFlowMap;

[numthreads(32,32,1)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
    if (id.x >= (uint)mapWidth || id.y >= (uint)mapHeight)
        return;

    int index = id.x + id.y * mapWidth;

    float height = heightMap[index];
    if (height < waterLevel)
        return;

    float flowValue = flowMap[index];// + 1;
    //if (flowValue > maxFlowStrength) flowValue = maxFlowStrength;

    if (flowValue < 1) flowValue = 1;
    if (logBase <= 1) logBase = 1.1;

    float erodeValue = (log(flowValue) / log(logBase)) * heightFactor;
    if (erodeValue < minAmount)
        erodeValue = 0;
    else
        erodeValue -= minAmount;

    if (erodeValue > height - waterLevel)
        erodeValue = height - waterLevel;
    else if (erodeValue > heightFactor)
        erodeValue = heightFactor;

    erodeValue = pow(abs(erodeValue), curveFactor);
    erodeValue = erodeValue * ((1 - heightInfluence) + heightInfluence * (height - waterLevel) * 4);
    erodeValue *= strength;

    inciseFlowMap[index] = erodeValue;
}
